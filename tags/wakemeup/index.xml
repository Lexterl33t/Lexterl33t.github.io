<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wakemeup on Bryton</title>
    <link>https://Lexterl33t.github.io/tags/wakemeup/</link>
    <description>Recent content in wakemeup on Bryton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 06 Jun 2022 17:55:28 +0800</lastBuildDate><atom:link href="https://Lexterl33t.github.io/tags/wakemeup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EsaipCTF - WakemeUP (500 pts)</title>
      <link>https://Lexterl33t.github.io/posts/esaip_ctf_wakemeup_reverse_engeneering/</link>
      <pubDate>Mon, 06 Jun 2022 17:55:28 +0800</pubDate>
      
      <guid>https://Lexterl33t.github.io/posts/esaip_ctf_wakemeup_reverse_engeneering/</guid>
      <description>J&amp;rsquo;ai été récemment à l&amp;rsquo;esaipCTF (mon premier ctf en présentiel). Je remercie les organisateurs du ctf en tout cas.
Donc en effet on se retrouve sur un challenge de reverse créer par Podalirius. En lui même le challenge est plutot simple il est juste long.
Donc dans un premier temps analysons le binaire.
code du main:
__int64 __fastcall main(int a1, const char **a2, char **a3) { char *v3; // rax __int16 v5; // [rsp+1Eh] [rbp-32h] char v6[40]; // [rsp+20h] [rbp-30h] BYREF unsigned __int64 v7; // [rsp+48h] [rbp-8h] v7 = __readfsqword(0x28u); strcpy(v6, &amp;#34;______________________________________&amp;#34;); v5 = 1; v3 = basename(*a2); if ( !</description>
    </item>
    
  </channel>
</rss>
